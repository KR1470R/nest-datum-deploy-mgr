#!/usr/bin/env sh

ALL="all_services"
declare -A happ_services=(
	["mail"]="git@github.com:nest-datum-lib/mail.git"
	["http"]="git@github.com:nest-datum-lib/http.git"
	["files"]="git@github.com:nest-datum-lib/files.git"
	["sso"]="git@github.com:nest-datum-lib/sso.git"
	["data_type"]="git@github.com:nest-datum-lib/data-type.git"
	["forms"]="git@github.com:nest-datum-lib/forms.git"
	["dictionary"]="git@github.com:nest-datum-lib/dictionary.git"
	["countries"]="git@github.com:nest-datum-lib/countries.git"
	["ws"]="git@github.com:nest-datum-lib/web-socket.git"
	["cv"]="git@github.com:nest-datum-lib/cv.git"
	["jobs"]="git@github.com:nest-datum-lib/jobs.git"
	["registry"]="git@github.com:nest-datum-lib/registry.git"
	["logs"]="git@github.com:nest-datum-lib/logs.git"

	["$ALL"]="$ALL"
)

echo "NEST-DATUM services deployment manager"
echo "USAGE: deploy <branch_name> <dir_destination?>"
echo "OPTIONS:"
echo "-> branch_name - name of the branch you want to pull from"
echo "-> dir_destination(optional) - absolute path to the directory where services will be loaded,"
echo "if not specified, the program will ask you use PWD."
echo

branch_name="$1"
if [ -z "$branch_name" ]; then
	echo "--! branch name is not specified!"
	exit 1
fi

services_destination="$2"
if [ -z "$services_destination" ]; then
	echo -ne "--? services destination is not specified, use current dir instead? [Y/n]: "
	read -r use_current_dir
	if [[ $use_current_dir =~ ^[Yy]$ ]]; then
		echo "--> using current dir $PWD"
		services_destination="$PWD"
	else
		echo "--! specify services destination!"
		exit 1
	fi
fi

SELECTED_SERVICES=$(dialog --no-tags --clear --separate-output \
	--backtitle "nest-datum Services initiator" --title "Choose service to init" \
	--checklist "Use SPACE to select/deselct options and OK when finished."  25 50 10 \
	$(for key in "${!happ_services[@]}"; do echo "$key $key off"; done) \
	2>&1 > /dev/tty
)

function init_repo() {
	repo_k="$1"
	repo_v="${happ_services[$repo_k]}"
	echo "--> clonning $repo_k from $repo_v..."
	git clone "$repo_v" "$repo_k"
	cd "$repo_k"
	git checkout "$branch_name"
	git pull origin "$branch_name"
}

function do_work() {
	repo_k="$1"
	if [ "$repo_k" == "$ALL" ]; then
		return 0
	fi

	if [ -d "$repo_k" ]; then
		echo "--> folder $repo_k exist, checking is repo initialized..."
		cd "$repo_k"
		if [ -d ".git" ]; then
			echo "--> repo initialized, pulling from branch..."
			git pull origin "$branch_name"
			cd "$services_destination"
			continue
		else
			cd "$services_destination" && rm -rf "$repo_k"
		fi
	fi

	echo "--> initializing $repo_k..."
	mkdir "$repo_k"
	init_repo "$repo_k"
	cd "$services_destination"
}

if [[ "$SELECTED_SERVICES" =~ "$ALL" ]]; then
	echo "--> selected all services"
	for key in "${!happ_services[@]}"; do do_work $key; done
else
	echo "--> selected: $(for k in $SELECTED_SERVICES; do echo -ne $k ' '; done)"
	for selected_service in $SELECTED_SERVICES; do do_work "$selected_service"; done
fi

cd "$services_destination"
echo "--> services initialized successfully"
